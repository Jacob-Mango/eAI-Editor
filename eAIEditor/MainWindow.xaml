<Window x:Class="eAIEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:eAIEditor"
        mc:Ignorable="d"
        Title="MainWindow" Width="1280" Height="720">
	<Window.DataContext>
		<local:MainWindowViewModel/>
	</Window.DataContext>
	<Window.Resources>
		<local:BooleanVisiblityConverter x:Key="BooleanVisiblityConverter"/>
		<local:InvertBooleanVisiblityConverter x:Key="InvertBooleanVisiblityConverter"/>
		<DrawingBrush x:Key="GridTile" Stretch="None" TileMode="Tile" Viewport="0,0 150,150" ViewportUnits="Absolute">
			<DrawingBrush.Drawing>
				<GeometryDrawing>
					<GeometryDrawing.Geometry>
						<GeometryGroup>
							<LineGeometry StartPoint="0,0" EndPoint="150,0" />
							<LineGeometry StartPoint="0,0" EndPoint="0,150" />
						</GeometryGroup>
					</GeometryDrawing.Geometry>
					<GeometryDrawing.Pen>
						<Pen Thickness="1" Brush="Black" />
					</GeometryDrawing.Pen>
				</GeometryDrawing>
			</DrawingBrush.Drawing>
		</DrawingBrush>
	</Window.Resources>
	<Window.CommandBindings>
		<CommandBinding Command="New" Executed="New" CanExecute="CanNew" />
		<CommandBinding Command="Open" Executed="Open" CanExecute="CanOpen" />
		<CommandBinding Command="Save" Executed="Save" CanExecute="CanSave" />
		<CommandBinding Command="SaveAs" Executed="SaveAs" CanExecute="CanSaveAs" />
	</Window.CommandBindings>
	<DockPanel>
		<ToolBarTray DockPanel.Dock="Top">
			<ToolBar>
				<Button Command="New" Content="New" />
				<Button Command="Open" Content="Open" />
				<Button Command="Save" Content="Save" />
				<Button Command="SaveAs" Content="Save As" />
			</ToolBar>
		</ToolBarTray>
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="6*" />
				<ColumnDefinition Width="4*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="1*" />
			</Grid.RowDefinitions>
			<Canvas Grid.Column="0" x:Name="graphArea">
				<Canvas x:Name="canvas" Background="{StaticResource GridTile}"  MinWidth="50000" MinHeight="50000" >
					<ItemsControl x:Name="itemscontrol" ItemsSource="{Binding Items}" xmlns:local="clr-namespace:eAIEditor">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<Canvas />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.Resources>
							<DataTemplate DataType="{x:Type local:FSMState}">
								<Canvas MouseDown="State_MouseDown" MouseUp="State_MouseUp" MouseMove="State_MouseMove" Background="White">
									<Line X1="0" Y1="0" X2="0" Y2="{Binding Height}" Stroke="Black" StrokeThickness="2"/>
									<Line X1="0" Y1="0" X2="{Binding Width}" Y2="0" Stroke="Black" StrokeThickness="2"/>
									<Line X1="{Binding Width}" Y1="0" X2="{Binding Width}" Y2="{Binding Height}" Stroke="Black" StrokeThickness="2"/>
									<Line X1="0" Y1="{Binding Height}" X2="{Binding Width}" Y2="{Binding Height}" Stroke="Black" StrokeThickness="2"/>
									<Label Width="{Binding Width}" Height="{Binding Height}" Content="{Binding Name}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
								</Canvas>
							</DataTemplate>
							<DataTemplate DataType="{x:Type local:FSMTransition}">
								<Canvas Background="White">
									<Line X1="{Binding SrcX}" Y1="{Binding SrcY}" X2="{Binding DstX}" Y2="{Binding DstY}" Stroke="Black" StrokeThickness="2"/>
									<Ellipse Visibility="{Binding DraggingSource, Converter={StaticResource InvertBooleanVisiblityConverter}}" Width="12" Height="12" Fill="Black" Stroke="Black" StrokeThickness="1" Canvas.Left="{Binding SrcX}" Canvas.Top="{Binding SrcY}" Margin="-6,-6,0,0" MouseDown="TransitionSource_MouseDown" MouseUp="TransitionSource_MouseUp" MouseMove="TransitionSource_MouseMove" />
									<Ellipse Visibility="{Binding DraggingDestination, Converter={StaticResource InvertBooleanVisiblityConverter}}" Width="12" Height="12" Fill="Black" Stroke="Black" StrokeThickness="1" Canvas.Left="{Binding DstX}" Canvas.Top="{Binding DstY}" Margin="-6,-6,0,0" MouseDown="TransitionDestination_MouseDown" MouseUp="TransitionDestination_MouseUp" MouseMove="TransitionDestination_MouseMove" />

									<Ellipse Visibility="{Binding DraggingSource, Converter={StaticResource BooleanVisiblityConverter}}" Width="12" Height="12" Fill="Black" Stroke="Red" StrokeThickness="1" Canvas.Left="{Binding SrcX}" Canvas.Top="{Binding SrcY}" Margin="-6,-6,0,0" MouseDown="TransitionSource_MouseDown" MouseUp="TransitionSource_MouseUp" MouseMove="TransitionSource_MouseMove" />
									<Ellipse Visibility="{Binding DraggingDestination, Converter={StaticResource BooleanVisiblityConverter}}" Width="12" Height="12" Fill="Black" Stroke="Red" StrokeThickness="1" Canvas.Left="{Binding DstX}" Canvas.Top="{Binding DstY}" Margin="-6,-6,0,0" MouseDown="TransitionDestination_MouseDown" MouseUp="TransitionDestination_MouseUp" MouseMove="TransitionDestination_MouseMove" />
								</Canvas>
							</DataTemplate>
						</ItemsControl.Resources>
						<ItemsControl.ItemContainerStyle>
							<Style>
								<Setter Property="Canvas.Left" Value="{Binding X}" />
								<Setter Property="Canvas.Top" Value="{Binding Y}" />
							</Style>
						</ItemsControl.ItemContainerStyle>
					</ItemsControl>
				</Canvas>
			</Canvas>
			<ScrollViewer x:Name="Control_Transition" Visibility="Hidden" Grid.Column="1" HorizontalScrollBarVisibility="Auto">
				<StackPanel Background="White">
					<Label Content="Event"></Label>
					<TextBox x:Name="Control_Transition_Event" Text="" VerticalAlignment="Stretch" Height="Auto" AcceptsReturn="True" AcceptsTab="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"/>
					<Label Content="From"></Label>
					<TextBox x:Name="Control_Transition_From" Text="" VerticalAlignment="Stretch" Height="Auto" AcceptsReturn="True" AcceptsTab="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"/>
					<Label Content="To"></Label>
					<TextBox x:Name="Control_Transition_To" Text="" VerticalAlignment="Stretch" Height="Auto" AcceptsReturn="True" AcceptsTab="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"/>
					<Label Content="Guard"></Label>
					<TextBox x:Name="Control_Transition_Guard" Text="" VerticalAlignment="Stretch" Height="Auto" AcceptsReturn="True" AcceptsTab="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"/>
				</StackPanel>
			</ScrollViewer>
			<ScrollViewer x:Name="Control_State" Visibility="Hidden" Grid.Column="1" HorizontalScrollBarVisibility="Auto">
				<StackPanel Background="White">
					<Label Content="Variables"></Label>
					<Label Content="Event Entry"></Label>
					<TextBox x:Name="Control_State_EventEntry" Text="" VerticalAlignment="Stretch" Height="Auto" AcceptsReturn="True" AcceptsTab="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"/>
					<Label Content="Event Exit"></Label>
					<TextBox x:Name="Control_State_EventExit" Text="" VerticalAlignment="Stretch" Height="Auto" AcceptsReturn="True" AcceptsTab="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"/>
					<Label Content="Event Entry"></Label>
					<TextBox x:Name="Control_State_EventUpdate" Text="" VerticalAlignment="Stretch" Height="Auto" AcceptsReturn="True" AcceptsTab="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"/>
				</StackPanel>
			</ScrollViewer>
		</Grid>
	</DockPanel>
</Window>
